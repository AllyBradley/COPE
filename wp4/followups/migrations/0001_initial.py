# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-14 12:32
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import livefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FollowUp1Y',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('version', models.PositiveIntegerField(default=0, help_text='Internal tracking version number')),
                ('record_locked', models.BooleanField(default=False, help_text='Not presently implemented or used')),
                ('live', livefield.fields.LiveField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='FB01 start date')),
                ('notes', models.TextField(blank=True, verbose_name='FB03 general notes')),
                ('graft_failure', models.NullBooleanField(verbose_name='FB10 graft failure')),
                ('graft_failure_date', models.DateField(blank=True, null=True, verbose_name='FB11 date of graft failure')),
                ('graft_failure_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc01 Immunological'), (2, 'FBc02 Preservation'), (3, 'FBc03 Technical - artery'), (4, 'FBc04 Technical - venous'), (5, 'FBc05 Infection - bacterial'), (6, 'FBc06 Infection - viral'), (10, 'FBc07 Other')], null=True, verbose_name='FB12 graft failure')),
                ('graft_failure_type_other', models.CharField(blank=True, max_length=200, verbose_name='FB13 Other failure type')),
                ('graft_removal', models.NullBooleanField(verbose_name='FB14 graft removal')),
                ('graft_removal_date', models.DateField(blank=True, null=True, verbose_name='FB15 date of graft removal')),
                ('dialysis_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc10 CAPD'), (2, 'FBc11 Hemodialysis'), (3, 'FBc12 Unknown')], null=True, verbose_name='FB16 Dialysis type')),
                ('immunosuppression_1', models.BooleanField(default=False, verbose_name='FB30 Post tx Azathioprine')),
                ('immunosuppression_2', models.BooleanField(default=False, verbose_name='FB31 Post tx Cyclosporin')),
                ('immunosuppression_3', models.BooleanField(default=False, verbose_name='FB32 Post tx MMF')),
                ('immunosuppression_4', models.BooleanField(default=False, verbose_name='FB33 Post tx Prednisolone')),
                ('immunosuppression_5', models.BooleanField(default=False, verbose_name='FB34 Post tx Sirolomus')),
                ('immunosuppression_6', models.BooleanField(default=False, verbose_name='FB35 Post tx Tacrolimus')),
                ('immunosuppression_7', models.BooleanField(default=False, verbose_name='FB36 Post tx Other')),
                ('immunosuppression_other', models.CharField(blank=True, max_length=200, verbose_name='FB37 Other immunosuppression')),
                ('rejection', models.NullBooleanField(verbose_name='FB19 rejection')),
                ('rejection_prednisolone', models.NullBooleanField(verbose_name='FB20 treated with prednisolone')),
                ('rejection_drug', models.NullBooleanField(verbose_name='FB21 treated with other drug')),
                ('rejection_drug_other', models.CharField(blank=True, max_length=200, verbose_name='FB22 Other rejection drug')),
                ('rejection_biopsy', models.NullBooleanField(verbose_name='FB23 biopsy proven')),
                ('calcineurin', models.NullBooleanField(verbose_name='FB24 calcineurin inhibitor')),
                ('serum_creatinine_unit', models.PositiveSmallIntegerField(choices=[(1, 'mg/dl'), (2, 'umol/L'), (3, 'mmol/L')], default=1, verbose_name='FY10 creatinine unit')),
                ('serum_creatinine', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FY11 creatinine ')),
                ('creatinine_clearance', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FY02 creatinine clearance')),
                ('currently_on_dialysis', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'MMc03 Unknown'), (0, 'MMc01 No'), (1, 'MMc02 Yes')], null=True, verbose_name='FY03 currently on dialysis')),
                ('dialysis_date', models.DateField(blank=True, null=True, verbose_name='FY04 date of last dialysis')),
                ('number_of_dialysis_sessions', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FY05 number of dialysis sessions')),
                ('rejection_periods', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FY06 rejection periods')),
                ('graft_complications', models.TextField(blank=True, verbose_name='FY07 graft function complications')),
            ],
            options={
                'verbose_name': 'FYm1 1 Year FollowUp',
                'abstract': False,
                'verbose_name_plural': 'FYm2 1 Year FollowUps',
                'permissions': (('view', 'Can view the data, but not modify it'), ('restrict_to_national', 'Can only use data from the same location country'), ('restrict_to_local', 'Can only use data from a specific location')),
            },
        ),
        migrations.CreateModel(
            name='FollowUp3M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('version', models.PositiveIntegerField(default=0, help_text='Internal tracking version number')),
                ('record_locked', models.BooleanField(default=False, help_text='Not presently implemented or used')),
                ('live', livefield.fields.LiveField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='FB01 start date')),
                ('notes', models.TextField(blank=True, verbose_name='FB03 general notes')),
                ('graft_failure', models.NullBooleanField(verbose_name='FB10 graft failure')),
                ('graft_failure_date', models.DateField(blank=True, null=True, verbose_name='FB11 date of graft failure')),
                ('graft_failure_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc01 Immunological'), (2, 'FBc02 Preservation'), (3, 'FBc03 Technical - artery'), (4, 'FBc04 Technical - venous'), (5, 'FBc05 Infection - bacterial'), (6, 'FBc06 Infection - viral'), (10, 'FBc07 Other')], null=True, verbose_name='FB12 graft failure')),
                ('graft_failure_type_other', models.CharField(blank=True, max_length=200, verbose_name='FB13 Other failure type')),
                ('graft_removal', models.NullBooleanField(verbose_name='FB14 graft removal')),
                ('graft_removal_date', models.DateField(blank=True, null=True, verbose_name='FB15 date of graft removal')),
                ('dialysis_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc10 CAPD'), (2, 'FBc11 Hemodialysis'), (3, 'FBc12 Unknown')], null=True, verbose_name='FB16 Dialysis type')),
                ('immunosuppression_1', models.BooleanField(default=False, verbose_name='FB30 Post tx Azathioprine')),
                ('immunosuppression_2', models.BooleanField(default=False, verbose_name='FB31 Post tx Cyclosporin')),
                ('immunosuppression_3', models.BooleanField(default=False, verbose_name='FB32 Post tx MMF')),
                ('immunosuppression_4', models.BooleanField(default=False, verbose_name='FB33 Post tx Prednisolone')),
                ('immunosuppression_5', models.BooleanField(default=False, verbose_name='FB34 Post tx Sirolomus')),
                ('immunosuppression_6', models.BooleanField(default=False, verbose_name='FB35 Post tx Tacrolimus')),
                ('immunosuppression_7', models.BooleanField(default=False, verbose_name='FB36 Post tx Other')),
                ('immunosuppression_other', models.CharField(blank=True, max_length=200, verbose_name='FB37 Other immunosuppression')),
                ('rejection', models.NullBooleanField(verbose_name='FB19 rejection')),
                ('rejection_prednisolone', models.NullBooleanField(verbose_name='FB20 treated with prednisolone')),
                ('rejection_drug', models.NullBooleanField(verbose_name='FB21 treated with other drug')),
                ('rejection_drug_other', models.CharField(blank=True, max_length=200, verbose_name='FB22 Other rejection drug')),
                ('rejection_biopsy', models.NullBooleanField(verbose_name='FB23 biopsy proven')),
                ('calcineurin', models.NullBooleanField(verbose_name='FB24 calcineurin inhibitor')),
                ('serum_creatinine_unit', models.PositiveSmallIntegerField(choices=[(1, 'mg/dl'), (2, 'umol/L'), (3, 'mmol/L')], default=1, verbose_name='F310 creatinine unit')),
                ('serum_creatinine', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F311 creatinine ')),
                ('creatinine_clearance', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F302 creatinine clearance')),
                ('currently_on_dialysis', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'MMc03 Unknown'), (0, 'MMc01 No'), (1, 'MMc02 Yes')], null=True, verbose_name='F303 currently on dialysis')),
                ('dialysis_date', models.DateField(blank=True, null=True, verbose_name='F304 date of last dialysis')),
                ('number_of_dialysis_sessions', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='F305 number of dialysis sessions')),
                ('rejection_periods', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='F306 rejection periods')),
                ('graft_complications', models.TextField(blank=True, verbose_name='F307 graft function complications')),
            ],
            options={
                'verbose_name': 'F3m1 3 Month FollowUp',
                'abstract': False,
                'verbose_name_plural': 'F3m2 3 Month FollowUps',
                'permissions': (('view', 'Can view the data, but not modify it'), ('restrict_to_national', 'Can only use data from the same location country'), ('restrict_to_local', 'Can only use data from a specific location')),
            },
        ),
        migrations.CreateModel(
            name='FollowUp6M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('version', models.PositiveIntegerField(default=0, help_text='Internal tracking version number')),
                ('record_locked', models.BooleanField(default=False, help_text='Not presently implemented or used')),
                ('live', livefield.fields.LiveField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='FB01 start date')),
                ('notes', models.TextField(blank=True, verbose_name='FB03 general notes')),
                ('graft_failure', models.NullBooleanField(verbose_name='FB10 graft failure')),
                ('graft_failure_date', models.DateField(blank=True, null=True, verbose_name='FB11 date of graft failure')),
                ('graft_failure_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc01 Immunological'), (2, 'FBc02 Preservation'), (3, 'FBc03 Technical - artery'), (4, 'FBc04 Technical - venous'), (5, 'FBc05 Infection - bacterial'), (6, 'FBc06 Infection - viral'), (10, 'FBc07 Other')], null=True, verbose_name='FB12 graft failure')),
                ('graft_failure_type_other', models.CharField(blank=True, max_length=200, verbose_name='FB13 Other failure type')),
                ('graft_removal', models.NullBooleanField(verbose_name='FB14 graft removal')),
                ('graft_removal_date', models.DateField(blank=True, null=True, verbose_name='FB15 date of graft removal')),
                ('dialysis_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc10 CAPD'), (2, 'FBc11 Hemodialysis'), (3, 'FBc12 Unknown')], null=True, verbose_name='FB16 Dialysis type')),
                ('immunosuppression_1', models.BooleanField(default=False, verbose_name='FB30 Post tx Azathioprine')),
                ('immunosuppression_2', models.BooleanField(default=False, verbose_name='FB31 Post tx Cyclosporin')),
                ('immunosuppression_3', models.BooleanField(default=False, verbose_name='FB32 Post tx MMF')),
                ('immunosuppression_4', models.BooleanField(default=False, verbose_name='FB33 Post tx Prednisolone')),
                ('immunosuppression_5', models.BooleanField(default=False, verbose_name='FB34 Post tx Sirolomus')),
                ('immunosuppression_6', models.BooleanField(default=False, verbose_name='FB35 Post tx Tacrolimus')),
                ('immunosuppression_7', models.BooleanField(default=False, verbose_name='FB36 Post tx Other')),
                ('immunosuppression_other', models.CharField(blank=True, max_length=200, verbose_name='FB37 Other immunosuppression')),
                ('rejection', models.NullBooleanField(verbose_name='FB19 rejection')),
                ('rejection_prednisolone', models.NullBooleanField(verbose_name='FB20 treated with prednisolone')),
                ('rejection_drug', models.NullBooleanField(verbose_name='FB21 treated with other drug')),
                ('rejection_drug_other', models.CharField(blank=True, max_length=200, verbose_name='FB22 Other rejection drug')),
                ('rejection_biopsy', models.NullBooleanField(verbose_name='FB23 biopsy proven')),
                ('calcineurin', models.NullBooleanField(verbose_name='FB24 calcineurin inhibitor')),
                ('serum_creatinine_unit', models.PositiveSmallIntegerField(choices=[(1, 'mg/dl'), (2, 'umol/L'), (3, 'mmol/L')], default=1, verbose_name='F610 creatinine unit')),
                ('serum_creatinine', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F611 creatinine ')),
                ('creatinine_clearance', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='F602 creatinine clearance')),
                ('currently_on_dialysis', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'MMc03 Unknown'), (0, 'MMc01 No'), (1, 'MMc02 Yes')], null=True, verbose_name='F603 currently on dialysis')),
                ('dialysis_date', models.DateField(blank=True, null=True, verbose_name='F604 date of last dialysis')),
                ('number_of_dialysis_sessions', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='F605 number of dialysis sessions')),
                ('rejection_periods', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='F606 rejection periods')),
                ('graft_complications', models.TextField(blank=True, verbose_name='F607 graft function complications')),
            ],
            options={
                'verbose_name': 'F6m1 6 Month FollowUp',
                'abstract': False,
                'verbose_name_plural': 'F6m2 6 Month FollowUps',
                'permissions': (('view', 'Can view the data, but not modify it'), ('restrict_to_national', 'Can only use data from the same location country'), ('restrict_to_local', 'Can only use data from a specific location')),
            },
        ),
        migrations.CreateModel(
            name='FollowUpInitial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('version', models.PositiveIntegerField(default=0, help_text='Internal tracking version number')),
                ('record_locked', models.BooleanField(default=False, help_text='Not presently implemented or used')),
                ('live', livefield.fields.LiveField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='FB01 start date')),
                ('notes', models.TextField(blank=True, verbose_name='FB03 general notes')),
                ('graft_failure', models.NullBooleanField(verbose_name='FB10 graft failure')),
                ('graft_failure_date', models.DateField(blank=True, null=True, verbose_name='FB11 date of graft failure')),
                ('graft_failure_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc01 Immunological'), (2, 'FBc02 Preservation'), (3, 'FBc03 Technical - artery'), (4, 'FBc04 Technical - venous'), (5, 'FBc05 Infection - bacterial'), (6, 'FBc06 Infection - viral'), (10, 'FBc07 Other')], null=True, verbose_name='FB12 graft failure')),
                ('graft_failure_type_other', models.CharField(blank=True, max_length=200, verbose_name='FB13 Other failure type')),
                ('graft_removal', models.NullBooleanField(verbose_name='FB14 graft removal')),
                ('graft_removal_date', models.DateField(blank=True, null=True, verbose_name='FB15 date of graft removal')),
                ('dialysis_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FBc10 CAPD'), (2, 'FBc11 Hemodialysis'), (3, 'FBc12 Unknown')], null=True, verbose_name='FB16 Dialysis type')),
                ('immunosuppression_1', models.BooleanField(default=False, verbose_name='FB30 Post tx Azathioprine')),
                ('immunosuppression_2', models.BooleanField(default=False, verbose_name='FB31 Post tx Cyclosporin')),
                ('immunosuppression_3', models.BooleanField(default=False, verbose_name='FB32 Post tx MMF')),
                ('immunosuppression_4', models.BooleanField(default=False, verbose_name='FB33 Post tx Prednisolone')),
                ('immunosuppression_5', models.BooleanField(default=False, verbose_name='FB34 Post tx Sirolomus')),
                ('immunosuppression_6', models.BooleanField(default=False, verbose_name='FB35 Post tx Tacrolimus')),
                ('immunosuppression_7', models.BooleanField(default=False, verbose_name='FB36 Post tx Other')),
                ('immunosuppression_other', models.CharField(blank=True, max_length=200, verbose_name='FB37 Other immunosuppression')),
                ('rejection', models.NullBooleanField(verbose_name='FB19 rejection')),
                ('rejection_prednisolone', models.NullBooleanField(verbose_name='FB20 treated with prednisolone')),
                ('rejection_drug', models.NullBooleanField(verbose_name='FB21 treated with other drug')),
                ('rejection_drug_other', models.CharField(blank=True, max_length=200, verbose_name='FB22 Other rejection drug')),
                ('rejection_biopsy', models.NullBooleanField(verbose_name='FB23 biopsy proven')),
                ('calcineurin', models.NullBooleanField(verbose_name='FB24 calcineurin inhibitor')),
                ('serum_creatinine_unit', models.PositiveSmallIntegerField(choices=[(1, 'mg/dl'), (2, 'umol/L'), (3, 'mmol/L')], default=1, verbose_name='FI02 creatinine unit')),
                ('serum_creatinine_1', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI03 creatinine 1')),
                ('serum_creatinine_2', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI04 creatinine 2')),
                ('serum_creatinine_3', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI05 creatinine 3')),
                ('serum_creatinine_4', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI06 creatinine 4')),
                ('serum_creatinine_5', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI07 creatinine 5')),
                ('serum_creatinine_6', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI08 creatinine 6')),
                ('serum_creatinine_7', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='FI09 creatinine 7')),
                ('dialysis_requirement_1', models.NullBooleanField(verbose_name='FI10 dialysis on day 1')),
                ('dialysis_requirement_2', models.NullBooleanField(verbose_name='FI11 dialysis on day 2')),
                ('dialysis_requirement_3', models.NullBooleanField(verbose_name='FI12 dialysis on day 3')),
                ('dialysis_requirement_4', models.NullBooleanField(verbose_name='FI13 dialysis on day 4')),
                ('dialysis_requirement_5', models.NullBooleanField(verbose_name='FI14 dialysis on day 5')),
                ('dialysis_requirement_6', models.NullBooleanField(verbose_name='FI15 dialysis on day 6')),
                ('dialysis_requirement_7', models.NullBooleanField(verbose_name='FI16 dialysis on day 7')),
                ('dialysis_cause', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'FIc00 No dialysis'), (1, 'FIc01 Delayed graft function'), (2, 'FIc02 Hyperkalemia'), (3, 'FIc03 Fluid overload'), (4, 'FIc04 Other')], null=True, verbose_name='FI20 Dialysis cause')),
                ('dialysis_cause_other', models.CharField(blank=True, max_length=200, verbose_name='FI21 Other dialysis cause')),
                ('hla_mismatch_a', models.CharField(blank=True, max_length=10, verbose_name='FI22 HLA A')),
                ('hla_mismatch_b', models.CharField(blank=True, max_length=10, verbose_name='FI23 HLA B')),
                ('hla_mismatch_dr', models.CharField(blank=True, max_length=10, verbose_name='FI24 HLA DR')),
                ('induction_therapy', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FIc10 IL 2'), (2, 'FIc11 ATG'), (3, 'FIc12 None')], null=True, verbose_name='FI25 Induction therapy')),
                ('discharge_date', models.DateField(blank=True, null=True, verbose_name='FI26 date of primary post tx discharge')),
            ],
            options={
                'verbose_name': 'FIm1 Initial FollowUp',
                'abstract': False,
                'verbose_name_plural': 'FIm2 Initial FollowUps',
                'permissions': (('view', 'Can view the data, but not modify it'), ('restrict_to_national', 'Can only use data from the same location country'), ('restrict_to_local', 'Can only use data from a specific location')),
            },
        ),
    ]
